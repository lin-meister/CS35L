#! /bin/bash

SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

# Find all the regular files that start with . and save it in an array
dot_files=( $( find $1 -maxdepth 1 -type f | grep "^\.\/\." | sort ) )

# Delete any links
for f in "${dot_files[@]}"
do
    if [ -L "f" ]
    then
	delete=($f)
	dot_files=( "${dot_files[@]/$delete}" )
    fi
done

for f1 in "${dot_files[@]}"
do
    test -r "$f1"
    readable_1=$?
    if [[ $readable_1 -eq 1 ]]
    then
	echo "$f1 is not readable"
    fi

    # Inner loop
    for f2 in "${dot_files[@]}"
    do
	test -r "$f2"
	readable_2=$?
        if [[ $readable_2 -eq 1 ]]
        then
	    echo "$f2 is not readable"
        fi

	# Compare the two files against each other
	# and save the status code (If 0 then they are same)
	cmp -s "$f1" "$f2"
	status=$?

	if [[ $status -eq "0" && $readable_1 -eq "0" && $readable_2 -eq "0" && $f1 != $f2 ]]
	then
	    ln -L -f "$f1" "$f2"
	fi
    done
done

# Now we get the regular files
all_files=( $( find $1 -maxdepth 1 -type f | sort ) )

# Delete any links
for f in "${all_files[@]}"
do
    if [ -L "f" ]
    then
	delete=($f)
	dot_files=( "${all_files[@]/$delete}" )
    fi
done

for f1 in "${all_files[@]}"
do
    test -r "$f1"
    readable_1=$?
    if [[ $readable_1 -eq 1 ]]
    then
	echo "$f1 is not readable"
    fi

    # Inner loop
    for f2 in "${all_files[@]}"
    do
	test -r "$f2"
	readable_2=$?
        if [[ $readable_2 -eq 1 ]]
        then
	    echo "$f2 is not readable"
        fi

	# Compare the two files against each other
	# and save the status code (If 0 then they are same)
	cmp -s "$f1" "$f2"
	status=$?

	if [[ $status -eq "0" && $readable_1 -eq "0" && $readable_2 -eq "0" && $f1 != $f2 ]]
	then
	    ln -L -f "$f1" "$f2"
	fi
    done
done

IFS=$SAVEIFS

exit 0
